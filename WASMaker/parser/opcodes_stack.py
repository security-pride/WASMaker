from ..parser.opcodes import *

stack_change = [-100] * 256

stack_change[Unreachable] = 0
stack_change[Nop] = 0
stack_change[Block] = "block"
stack_change[Loop] = "loop"
stack_change[If] = "if"
stack_change[Else_] = "else"
stack_change[End_] = "end"
stack_change[Br] = 0
stack_change[BrIf] = -1
stack_change[BrTable] = -1

stack_change[Return] = 0
stack_change[Call] = "call"
stack_change[CallIndirect] = "call_indirect"

stack_change[Drop] = -1
stack_change[Select] = -2
stack_change[LocalGet] = 1
stack_change[LocalSet] = -1
stack_change[LocalTee] = 0
stack_change[GlobalGet] = 1
stack_change[GlobalSet] = -1
stack_change[I32Load] = 0
stack_change[I64Load] = 0
stack_change[F32Load] = 0
stack_change[F64Load] = 0
stack_change[I32Load8S] = 0
stack_change[I32Load8U] = 0
stack_change[I32Load16S] = 0
stack_change[I32Load16U] = 0
stack_change[I64Load8S] = 0
stack_change[I64Load8U] = 0
stack_change[I64Load16S] = 0
stack_change[I64Load16U] = 0
stack_change[I64Load32S] = 0
stack_change[I64Load32U] = 0
stack_change[I32Store] = -2
stack_change[I64Store] = -2
stack_change[F32Store] = -2
stack_change[F64Store] = -2
stack_change[I32Store8] = -2
stack_change[I32Store16] = -2
stack_change[I64Store8] = -2
stack_change[I64Store16] = -2
stack_change[I64Store32] = -2
stack_change[MemorySize] = 1
stack_change[MemoryGrow] = 0
stack_change[I32Const] = 1
stack_change[I64Const] = 1
stack_change[F32Const] = 1
stack_change[F64Const] = 1
stack_change[I32Eqz] = 0
stack_change[I32Eq] = -1
stack_change[I32Ne] = -1
stack_change[I32LtS] = -1
stack_change[I32LtU] = -1
stack_change[I32GtS] = -1
stack_change[I32GtU] = -1
stack_change[I32LeS] = -1
stack_change[I32LeU] = -1
stack_change[I32GeS] = -1
stack_change[I32GeU] = -1
stack_change[I64Eqz] = 0
stack_change[I64Eq] = -1
stack_change[I64Ne] = -1
stack_change[I64LtS] = -1
stack_change[I64LtU] = -1
stack_change[I64GtS] = -1
stack_change[I64GtU] = -1
stack_change[I64LeS] = -1
stack_change[I64LeU] = -1
stack_change[I64GeS] = -1
stack_change[I64GeU] = -1
stack_change[F32Eq] = -1
stack_change[F32Ne] = -1
stack_change[F32Lt] = -1
stack_change[F32Gt] = -1
stack_change[F32Le] = -1
stack_change[F32Ge] = -1
stack_change[F64Eq] = -1
stack_change[F64Ne] = -1
stack_change[F64Lt] = -1
stack_change[F64Gt] = -1
stack_change[F64Le] = -1
stack_change[F64Ge] = -1
stack_change[I32Clz] = 0
stack_change[I32Ctz] = 0
stack_change[I32PopCnt] = 0
stack_change[I32Add] = -1
stack_change[I32Sub] = -1
stack_change[I32Mul] = -1
stack_change[I32DivS] = -1
stack_change[I32DivU] = -1
stack_change[I32RemS] = -1
stack_change[I32RemU] = -1
stack_change[I32And] = -1
stack_change[I32Or] = -1
stack_change[I32Xor] = -1
stack_change[I32Shl] = -1
stack_change[I32ShrS] = -1
stack_change[I32ShrU] = -1
stack_change[I32Rotl] = -1
stack_change[I32Rotr] = -1
stack_change[I64Clz] = 0
stack_change[I64Ctz] = 0
stack_change[I64PopCnt] = 0
stack_change[I64Add] = -1
stack_change[I64Sub] = -1
stack_change[I64Mul] = -1
stack_change[I64DivS] = -1
stack_change[I64DivU] = -1
stack_change[I64RemS] = -1
stack_change[I64RemU] = -1
stack_change[I64And] = -1
stack_change[I64Or] = -1
stack_change[I64Xor] = -1
stack_change[I64Shl] = -1
stack_change[I64ShrS] = -1
stack_change[I64ShrU] = -1
stack_change[I64Rotl] = -1
stack_change[I64Rotr] = -1
stack_change[F32Abs] = 0
stack_change[F32Neg] = 0
stack_change[F32Ceil] = 0
stack_change[F32Floor] = 0
stack_change[F32Trunc] = 0
stack_change[F32Nearest] = 0
stack_change[F32Sqrt] = 0
stack_change[F32Add] = -1
stack_change[F32Sub] = -1
stack_change[F32Mul] = -1
stack_change[F32Div] = -1
stack_change[F32Min] = -1
stack_change[F32Max] = -1
stack_change[F32CopySign] = -1
stack_change[F64Abs] = 0
stack_change[F64Neg] = 0
stack_change[F64Ceil] = 0
stack_change[F64Floor] = 0
stack_change[F64Trunc] = 0
stack_change[F64Nearest] = 0
stack_change[F64Sqrt] = 0
stack_change[F64Add] = -1
stack_change[F64Sub] = -1
stack_change[F64Mul] = -1
stack_change[F64Div] = -1
stack_change[F64Min] = -1
stack_change[F64Max] = -1
stack_change[F64CopySign] = -1
stack_change[I32WrapI64] = 0
stack_change[I32TruncF32S] = 0
stack_change[I32TruncF32U] = 0
stack_change[I32TruncF64S] = 0
stack_change[I32TruncF64U] = 0
stack_change[I64ExtendI32S] = 0
stack_change[I64ExtendI32U] = 0
stack_change[I64TruncF32S] = 0
stack_change[I64TruncF32U] = 0
stack_change[I64TruncF64S] = 0
stack_change[I64TruncF64U] = 0
stack_change[F32ConvertI32S] = 0
stack_change[F32ConvertI32U] = 0
stack_change[F32ConvertI64S] = 0
stack_change[F32ConvertI64U] = 0
stack_change[F32DemoteF64] = 0
stack_change[F64ConvertI32S] = 0
stack_change[F64ConvertI32U] = 0
stack_change[F64ConvertI64S] = 0
stack_change[F64ConvertI64U] = 0
stack_change[F64PromoteF32] = 0
stack_change[I32ReinterpretF32] = 0
stack_change[I64ReinterpretF64] = 0
stack_change[F32ReinterpretI32] = 0
stack_change[F64ReinterpretI64] = 0
stack_change[I32Extend8S] = 0
stack_change[I32Extend16S] = 0
stack_change[I64Extend8S] = 0
stack_change[I64Extend16S] = 0
stack_change[I64Extend32S] = 0
